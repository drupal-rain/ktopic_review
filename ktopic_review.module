<?php
/**
 * @file
 * Code for the Ktopic Review feature.
 */

include_once 'ktopic_review.features.inc';

include_once 'ktopic_review.theme.inc';

// Turn '/<ktopic>-review' into 'node/%node'
/*
function ktopic_review_url_inbound_alter(&$path, $original_path, $path_language) {

  //dsm($path, 'path');
  //dsm($original_path, 'original_path');
  //dsm($path_language, 'path_language');

  if ($ktopic = ktopic_review_ktopic_from_path($original_path, $path_language)) {
    if ($kreview = ktopic_review_ktopic_get_last_review($ktopic)) {
      $path = entity_uri('node', $kreview)['path'];
    }

    // @todo Disable globalredirect for this path.
    // @issue https://www.drupal.org/node/1438584
    // @test Have tried. Don't know if I really need it.

  }
}
*/

/**
 * @implements hook_node_insert().
 */
function ktopic_review_node_insert($node) {
  ktopic_review_new_path_alias($node);
  ktopic_review_main_path_alias($node);
}

/**
 * @implements hook_node_update().
 */
function ktopic_review_node_update($node) {
  ktopic_review_mod_path_alias($node);
  ktopic_review_main_path_alias($node);
}

// @todo Deal with deletion.
// hook_node_delete().

// Assign the /<ktopic>-review alias to the latest node<kreview>.
// If it's published and creation date is the latest.
// 1. Remove the old on if exists.
// 2. Create path alias.
// @issue If use hook_node_insert(), hook_node_update() would cause the node_form error.
function ktopic_review_main_path_alias($kreview) {
  if ($kreview->type == 'kreview') {
    if ($kreview->status == NODE_PUBLISHED) {
      $ktopic = kreview_get_ktopic($kreview);
      $kreviews = ktopic_review_ktopic_get_reviews($ktopic);
      $kreview_last = ktopic_review_ktopic_get_last_review($ktopic);
      if (
        $kreview_last == NULL
        || $kreview_last->nid == $kreview->nid
        || $kreview->created > $kreview_last->created
      ) {
        $uri = entity_uri('node', $kreview);
        $lang = entity_language('node', $kreview);
        // @issue Any issue in node creation?
        $path_alias = drupal_get_path_alias($uri['path']);
        $want_path_alias = ktopic_get_name($ktopic) . '-review';
        $path_source = drupal_lookup_path('source', $want_path_alias);
        $want_source = $uri['path'];
        if ($want_source != $path_source) {
          $path = array(
            'source' => $want_source,
            'alias' => $want_path_alias,
          );
          $path_old = path_load(
            array(
              'alias' => $want_path_alias,
            )
          );
          // If old path alias exists, we delete it first.
          if ($path_old) {
            // $path['pid'] = $path_old['pid'];
            path_delete($path_old);
          }
          // If save before pathauto, globalredirect will use /<ktopic>-review-<date>
          // If save after pathauto,globalredirect will use /<ktopic>-review
          path_save($path);
        }
      }
    }
  }
}

// For new kreview.
// @issue It may be better to not use pathauto here.
// [node:og-ktopic-ref:url:path]-review-[node:created:custom:Y]-[node:created:custom:m]-[node:created:custom:d]
// @todo Same day review url.
function ktopic_review_new_path_alias($kreview) {
  if ($kreview->type == 'kreview' && $kreview->is_new) {
    $ktopic = kreview_get_ktopic($kreview);
    $kreview_uri = entity_uri('node', $kreview);
    $ktopic_uri = entity_uri('node', $ktopic);
    $ktopic_path_alias = drupal_get_path_alias($ktopic_uri['path']);
    $want_source = $kreview_uri['path'];
    $want_alias = $ktopic_path_alias . '-review-' . date('Y-m-d', $kreview->created);
    $path = array(
      'source' => $want_source,
      'alias' => $want_alias,
    );
    path_save($path);
  }
}

// For update kreview.
function ktopic_review_mod_path_alias($kreview) {
  if ($kreview->type == 'kreview' && !$kreview->is_new) {
    $ktopic = kreview_get_ktopic($kreview);
    $kreview_uri = entity_uri('node', $kreview);
    $ktopic_uri = entity_uri('node', $ktopic);
    $ktopic_path_alias = drupal_get_path_alias($ktopic_uri['path']);
    $want_source = $kreview_uri['path'];
    $want_alias = $ktopic_path_alias . '-review-' . date('Y-m-d', $kreview->created);

    // Delete old path aliases.
    // @todo Any better solution?
    $result= db_query('SELECT * FROM {url_alias} ua WHERE source = :source', array(':source' => $want_source));
    foreach($result as $value) {
      path_delete((array)$value);
    }

    // Save the new path every time.
    $path = array(
      'source' => $want_source,
      'alias' => $want_alias,
    );
    path_save($path);
  }
}

// ----------------------------------------------------------------------------
// Ktopic Function

/**
 * Try to fetch a node<ktopic> with the request path.
 */
function ktopic_review_ktopic_from_path($path, $lang) {
  $ktopic = NULL;
  $check = '-review';
  if (KtoolsString::endsWith($path, $check)) {
    $ktopic_name = substr_replace($path, '', -strlen($check));
    $conds[] = array(
      'column' => 'machine',
      'value' => $ktopic_name,
      'operator' => '=',
    );
    $ktopics = KtoolsEntityField::queryEntities('field_ktopic_name', $conds, 'node', TRUE, $lang);
    $ktopic = reset($ktopics);
  }

  return $ktopic;
}

// Fetch all reviews of this topic.
function ktopic_review_ktopic_get_reviews($ktopic) {
  $lang = entity_language('node', $ktopic);
  // og use site default language instead, it would be en.
  if ($lang == LANGUAGE_NONE) {
    $lang = language_default('language');
  }
  $kreviews = KtoolsEntityField::entityreferenceRevertEntities('og_ktopic_ref', $ktopic->nid, 'node', TRUE, $lang);

  return $kreviews;
}

/**
 * Try to fetch the latest node<kreview> for the specific node<ktopic>.
 */
function ktopic_review_ktopic_get_last_review($ktopic) {
  $kreview = NULL;
  $kreviews = ktopic_review_ktopic_get_reviews($ktopic);
  $timestamp = 0;
  foreach ($kreviews as $kreview_tmp) {
    // @issue May need to consider nid if timestamp is the same.
    if ($kreview_tmp->status == NODE_PUBLISHED && $kreview_tmp->created > $timestamp) {
      $timestamp = $kreview_tmp->created;
      $kreview = $kreview_tmp;
    }
  }

  return $kreview;
}

// ----------------------------------------------------------------------------
// Kreview Function

function kreview_is_last_review($kreview) {
  $ktopic = kreview_get_ktopic($kreview);
  $kreview_last = ktopic_review_ktopic_get_last_review($ktopic);

  return $kreview->nid == $kreview_last->nid ? TRUE : FALSE;
}

// Fetch the host topic.
function kreview_get_ktopic($kreview) {
  $lang = $kreview->language;

  return node_load($kreview->og_ktopic_ref[$lang][0]['target_id']);
}

// Fetch related reviews.
function kreview_get_reviews($kreview) {
  $ktopic = kreview_get_ktopic($kreview);

  return ktopic_review_ktopic_get_reviews($ktopic);
}
